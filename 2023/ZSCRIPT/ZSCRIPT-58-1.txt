
// To whoever is curious enough to look through this script,
// Possibly with intent to improve or use it:
// Feel free to do anything you want with it, I totally approve!
// You may also be able to email me at Ann@PoppingSpree.dev
// I make no guarantee that I will see the message, let alone reply to it.

/*
----------
--Credit--
----------
Music:
{
	SHOSTILE: HOSTILE COUNT (No Guns; No Bosses) by by SCALEBEASTS#0777

	SSYNACK2: Survey Sync Acknowledged (No Guns; No Bosses) by by SCALEBEASTS#0777
	SSYNACK: Survey Sync Acknowledged Lite (No Guns; No Bosses) by by SCALEBEASTS#0777

	SBATTLE3: This Is What We Trained For (No Guns; No Bosses) by by SCALEBEASTS#0777
	SBATTLL3: This Is What We Trained For Lite (No Guns; No Bosses) by by SCALEBEASTS#0777

	SBATTLE4: Cover of Hydroelectric Plant. Cover by SCALEBEASTS#0777
	SBATTLL4: d_map01 "Hydroelectric Plant" from FreeDoom Phase 2 https://github.com/freedoom/freedoom
}

Sounds:
SCALEBEASTS#0777
{
	SBCANCEL
}

NeoSpeech Bridget TTS:
{
	SBNEWS
}

ElevenLabs:
{
	KNOCKOFF
	HGH
	HGGH
	CHECKPT
	CHECKMAT
	CHECK
	CHECKSIX
	CANT
	TCH
	OWW
	OWH
	OUCH
	OOF
	NOTHING
	NADA
}

Puzzle Bobble:
{
	PBLAND
	BMNPOPSF
	BMNSQKSF
}

Super Mario Bros 2: Yoshi's Island:
{
	BMRING
	BMNDASHR
	BMJUMP
	BMSHOOP
}

Super Buster Bros. (SNES):
{
	BMNPOPBL
	BMNDANK
	BMNPOPBO
	BMNHOOKS
}

Sound Ideas (Paid):
{
 - Balloon_Creak_Multiple_Long_09
 - Balloon_Warble_Release_Air_Resonate_01
}

Art:
Ann (PoppingSpree.Dev)
{
	Every image in this WAD. If I included something that shouldn't be there, please poke me.
	Exception - Exit Pic of Allco Mers is illustrated by Ann, but background made with Bing Image Creator.
}
*/

class BMHealthPatch : Health
{
	Default
	{
		Scale 0.4;
		inventory.pickupsound "misc/p_pkup";
		inventory.pickupmessage "Patching up!";
		Health.Lowmessage 35, "Barely keeping it together...";
		inventory.respawntics 2010;
		Inventory.Amount 50;
		Inventory.MaxAmount 200;
		+COUNTITEM;
	}
    
    states
    {
        Spawn:
            WPAT A -1 bright;
            stop;
    }
}

class BMAutoMap : MapRevealer
{
	Default
	{
		inventory.pickupsound "misc/p_pkup";
		inventory.pickupmessage "E-Paper Map!";
		inventory.respawntics 2010;
		+COUNTITEM;
	}
    
    states
    {
        Spawn:
            WMAP A -1 bright;
            stop;
    }
}

// S_Skin

class BMCheckpoint : CustomInventory
{
	Default
	{
		Inventory.pickupsound "BMCHECKP";
		Inventory.pickupmessage "Checkpoint!";
		Radius 128;
		Height 128;
	}
	
    states
    {
        Spawn:
            BMCH A -1 bright;
            stop;
		Pickup:
			TNT1 A 1 bright ACS_NamedExecute("time_extend_30");
            stop;
    }
}

class BMDoomkini : GreenArmor
{
    Default
	{
        inventory.pickupsound "misc/p_pkup";
        inventory.pickupmessage "Pretty clothes!";
        inventory.respawntics 2010;
        +COUNTITEM;
    }
    states
    {	
        Spawn:
            GBKN A -1 bright;
            stop;
    }
}

class BMDoomress : BlueArmor
{
    Default
	{
        inventory.pickupsound "misc/p_pkup";
        inventory.pickupmessage "A lovely dress!";
        inventory.respawntics 2010;
        +COUNTITEM;
    }
    states
    {	
        Spawn:
            GBKN B -1 bright;
            stop;
    }
}

class BMBunBons : HealthBonus
{
    Default
	{
        inventory.pickupsound "misc/p_pkup";
        inventory.pickupmessage "Sweets!";
        inventory.respawntics 2010;
        +COUNTITEM;
    }
    states
    {
        Spawn:
            BUNB A -1 bright;
            stop;
    }
}

class BMRedFlower : Actor
{
	Default
	{
	}
    states
    {
        Spawn:
            BMRF A -1;
            stop;
    }
}

class BMSpawnerTankStinger : Actor
{
	Default
	{
		Tag "Puff Tank: Bee Stinger";
		DropItem "BMHealthPatch";
		Health 100;
		Speed 0;
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		+FORCEXYBILLBOARD;
		
		SeeSound "BMNSQKSF";
		PainSound "BMNSQKSF";
		DeathSound "BMNPOPBO";
		//DeathSound "world/barrelx";
		ActiveSound "BMNSQKSF";
	}
    States
    {			
		Spawn:
			BMHT A 10 A_Look;
			Loop;
		See:
			BMHT A 3 A_Chase;
			Loop;
		Missile:
			BMHT A 5 A_FaceTarget;
			BMHT A 5 A_FaceTarget;
			BMHT A 5 BRIGHT A_FaceTarget;
			BMHT A 0 BRIGHT A_PainAttack("BMBeeStinger");
			Goto See;
		Pain:
			BMHT A 6;
			BMHT A 6 A_Pain;
			Goto See;
		Death:
			BMHT A 8 BRIGHT;
			BMHT A 8 BRIGHT A_Scream;
			BMHT B 8 BRIGHT A_PainDie("BMBeeStinger");
			BMHT B 8 BRIGHT;
			Stop;
		Raise:
			BMHT A 8;
			Goto See;
    }
}

class BMSpawnerTankBorkPacon : BMSpawnerTankStinger
{
	Default
	{
		Tag "Puff Tank: Bork Pacon";
		Health 100;
		Speed 0;
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		+FORCEXYBILLBOARD;
		
		SeeSound "BMNSQKSF";
		PainSound "BMNSQKSF";
		DeathSound "BMNPOPBO";
		//DeathSound "world/barrelx";
		ActiveSound "BMNSQKSF";
	}
    states
    {
		Spawn:
			BMHT A 10 A_Look;
			Loop;
		See:
			BMHT A 3 A_Chase;
			Loop;
		Missile:
			BMHT A 5 A_FaceTarget;
			BMHT A 5 A_FaceTarget;
			BMHT A 5 BRIGHT A_FaceTarget;
			BMHT A 0 BRIGHT A_PainAttack("BMBorkPaconImp");
			Goto See;
		Pain:
			BMHT A 6;
			BMHT A 6 A_Pain;
			Goto See;
		Death:
			BMHT A 8 BRIGHT;
			BMHT A 8 BRIGHT A_Scream;
			BMHT B 8 BRIGHT A_PainDie("BMBorkPaconImp");
			BMHT B 8 BRIGHT;
			Stop;
		Raise:
			BMHT A 8;
			Goto See;
    }
}

class BMSpawnerTankBouncer : BMSpawnerTankStinger
{
	Default
	{
		Tag "Puff Tank: Bouncer";
		Health 100;
		Speed 0;
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		+FORCEXYBILLBOARD;
		
		SeeSound "BMNSQKSF";
		PainSound "BMNSQKSF";
		DeathSound "BMNPOPBO";
		//DeathSound "world/barrelx";
		ActiveSound "BMNSQKSF";
	}
    states
    {			
		Spawn:
			BMHT A 10 A_Look;
			Loop;
		See:
			BMHT A 3 A_Chase;
			Loop;
		Missile:
			BMHT A 5 A_FaceTarget;
			BMHT A 5 A_FaceTarget;
			BMHT A 5 BRIGHT A_FaceTarget;
			BMHT A 0 BRIGHT A_PainAttack("BMCacoBouncer");
			Goto See;
		Pain:
			BMHT A 6;
			BMHT A 6 A_Pain;
			Goto See;
		Death:
			BMHT A 8 BRIGHT;
			BMHT A 8 BRIGHT A_Scream;
			BMHT B 8 BRIGHT A_PainDie("BMCacoBouncer");
			BMHT B 8 BRIGHT;
			Stop;
		Raise:
			BMHT A 8;
			Goto See;
    }
}

class BMSpawnerTankPinky : BMSpawnerTankStinger
{
    
	Default
	{
		Tag "Puff Tank: Pinky POW";
		Health 100;
		Speed 0;
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		+FORCEXYBILLBOARD;
		
		SeeSound "BMNSQKSF";
		PainSound "BMNSQKSF";
		DeathSound "BMNPOPBO";
		//DeathSound "world/barrelx";
		ActiveSound "BMNSQKSF";
	}
    states
    {			
		Spawn:
			BMHT A 10 A_Look;
			Loop;
		See:
			BMHT A 3 A_Chase;
			Loop;
		Missile:
			BMHT A 5 A_FaceTarget;
			BMHT A 5 A_FaceTarget;
			BMHT A 5 BRIGHT A_FaceTarget;
			BMHT A 0 BRIGHT A_PainAttack("BMPinkyPOW");
			Goto See;
		Pain:
			BMHT A 6;
			BMHT A 6 A_Pain;
			Goto See;
		Death:
			BMHT A 8 BRIGHT;
			BMHT A 8 BRIGHT A_Scream;
			BMHT B 8 BRIGHT A_PainDie("BMPinkyPOW");
			BMHT B 8 BRIGHT;
			Stop;
		Raise:
			BMHT A 8;
			Goto See;
    }
}

class BMSpawnerTankBMCacoSqueaken : BMSpawnerTankStinger
{
    
	Default
	{
		Tag "Puff Tank: CacoSqueaken";
		Health 100;
		Speed 0;
		+SOLID;
		+SHOOTABLE;
		+NOBLOOD;
		+ACTIVATEMCROSS;
		+DONTGIB;
		+NOICEDEATH;
		+FORCEXYBILLBOARD;
		
		SeeSound "BMNSQKSF";
		PainSound "BMNSQKSF";
		DeathSound "BMNPOPBO";
		//DeathSound "world/barrelx";
		ActiveSound "BMNSQKSF";
	}
    states
    {			
		Spawn:
			BMHT A 10 A_Look;
			Loop;
		See:
			BMHT A 3 A_Chase;
			Loop;
		Missile:
			BMHT A 5 A_FaceTarget;
			BMHT A 5 A_FaceTarget;
			BMHT A 5 BRIGHT A_FaceTarget;
			BMHT A 0 BRIGHT A_PainAttack("BMCacoSqueaken");
			Goto See;
		Pain:
			BMHT A 6;
			BMHT A 6 A_Pain;
			Goto See;
		Death:
			BMHT A 8 BRIGHT;
			BMHT A 8 BRIGHT A_Scream;
			BMHT B 8 BRIGHT A_PainDie("BMCacoSqueaken");
			BMHT B 8 BRIGHT;
			Stop;
		Raise:
			BMHT A 8;
			Goto See;
    }
}

class BMCacoSqueaken : Actor
{
    Default
	{
        Health 10;
		DropItem "BMStingFrazzle", 256, 100;
        Radius 32;
        Height 56;
        Mass 50;
        Speed 20;
        Damage 5;
        PainChance 256;
		
        Monster;
		-CountKill;
		
        +FLOAT;
        +NOGRAVITY;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD;
		+SPAWNFLOAT;
		+FORCEXYBILLBOARD;
		
        AttackSound "skull/melee";
        PainSound "BMNSQKSF";
        DeathSound "BMNPOPBL";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was busted open by a Cacosqueaken."; // "%o was spooked by a lost soul."
		
        
    }
    
    states
    {
        Spawn:
            BMCA A 10 A_Look;
            Loop;
        See:
            BMCA A 6 A_Chase;
            Loop;
        Missile:
            BMCA A 10 A_FaceTarget;
            BMCA A 4 A_SkullAttack;
            BMCA A 4;
            Goto Missile+2;
        Pain:
            BMCA A 3;
            BMCA A 3 A_Pain;
            Goto See;
        Death:
            BMCA B 2 A_Scream;
			BMCA B 2 A_Blast(0, 255, 512.0, 30.0, "BlastEffect", "BlastRadius");
			//BMCA C 4 A_Explode(128, 256);
			BMCA C 4 A_NoBlocking();
			BMCA D -1;
			Stop;
	}
}

class BMCacoBouncer : Actor
{
    Default
	{
        Health 5;
		DropItem "BMWindBullet", 256, 100;
        Radius 32;
        Height 56;
        Mass 50;
        Speed 30;
        Damage 1;
        PainChance 256;
        Monster;
		-CountKill;
        +FLOAT;
        +NOGRAVITY;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD
		+SPAWNFLOAT
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 0.25;
		BounceCount 5;
		
        AttackSound "skull/melee";
        PainSound "BMNSQKSF";
        DeathSound "world/barrelx";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was crushed to bits by a CacoBouncer.";
    }
    
    states
    {
        Spawn:
            BMCA EEEEIIJJII 10 BRIGHT A_Look;
            Loop;
        See:
            BMCA IIIEEE 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMCA J 10 BRIGHT A_FaceTarget;
            BMCA J 4 BRIGHT A_SkullAttack;
            BMCA J 4 BRIGHT;
            Goto Missile+2;
        Pain:
            BMCA I 3 BRIGHT;
            BMCA I 3 BRIGHT A_Pain;
            Goto See;
        Death:
            BMCA E 2;
            BMCA F 2 A_Scream;
			BMCA G 4 A_Explode(128, 256);
			BMCA H 2 A_NoBlocking();
			BMCA H -1;
			Stop;
	}
}

class BMBeeStinger : Actor
{
    Default
	{
		Tag "Bee Squeak-Stinger";
		DropItem "BMStingShreds", 256, 100;
        Health 5;
        Radius 32;
        Height 56;
        Mass 50;
        Speed 2;
        Damage 1;
        PainChance 256;
        Monster;
		-CountKill;
        +FLOAT;
        +NOGRAVITY;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD;
		+SPAWNFLOAT;
		+FORCEXYBILLBOARD;
		
        AttackSound "BMNDANK";
        PainSound "BMNSQKSF";
        DeathSound "BMNPOPBL";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was filled with Squeak-stingers.";
    }
    
    states
    {
		Spawn:
			BMBZ A 10 A_Look;
			Loop;
		See:
			BMBZ A 3 A_Chase;
			Loop;
		Melee:
		Missile:
			BMBZ A 8 A_FaceTarget;
			BMBZ A 6 A_SpawnProjectile("BMAttackDart");
			Goto See;
		Pain:
			BMBZ A 2;
			BMBZ A 2 A_Pain;
			Goto See;
		Death:
			BMBZ B 2 A_Scream;
			BMBZ B 2 A_Blast(0, 255, 128.0, 50.0, "BlastEffect", "BlastRadius");
			BMBZ C 2 A_Explode(64, 128);
			BMBZ C 2 A_NoBlocking;
			BMBZ C -1;
			Stop;
		XDeath:
			BMBZ A 2;
			BMBZ B 2 A_Scream;
			BMBZ C 2 A_Explode(64, 128);
			BMBZ C 2 A_NoBlocking;
			BMBZ C -1;
			Stop;
		Raise:
			BMBZ B 8;
			BMBZ A 6;
			Goto See;
			
			// Memo to use the earthquake in the intro somewhere.
	}
}

class BMAttackDart : DoomImpBall
{
    Default
	{
        Radius 6;
        Height 8;
        Speed 30;
		FastSpeed 6;
        Damage 3;
        Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 1;
		SeeSound "imp/attack";
		DeathSound "imp/shotx";
		
        Obituary "%o was filled with B-stings.";
    }
    
    states
    {
        Spawn:
            BMST C 4 BRIGHT;
            Loop;
        Death:
            BMST C 6 Bright;
			Stop;
	}
}

class BMPinkyPOW : Actor
{
    Default
	{
		DropItem "BMWindBullet";
        Health 50;
        Radius 32;
        Height 56;
        Mass 50;
        Speed 15;
        Damage 1;
        PainChance 256;
        Monster;
		-CountKill;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD;
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 0.25;
		BounceCount 10;
		
        AttackSound "skull/melee";
        PainSound "BMNSQKSF";
        //DeathSound "BMNPOPSF";
		DeathSound "BMNPOPBL";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o tried to pet a peckish Pinky Pow.";
    }
    
    states
    {
        Spawn:
            BMPK B 10 BRIGHT A_Look;
            Loop;
        See:
            BMPK B 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMPK A 10 BRIGHT A_FaceTarget;
            BMPK A 4 BRIGHT A_SkullAttack;
            BMPK A 4 BRIGHT;
            Goto Missile+2;
        Pain:
            BMPK A 3 BRIGHT;
            BMPK A 3 BRIGHT A_Pain;
            Goto See;
        Death:
            BMPK C 2 A_Scream;
			BMPK D 2 A_Explode(64, 128);
			BMPK E 2 A_NoBlocking();
			BMPK E -1;
			Stop;
	}
}

class BMBorkPaconImp : Actor
{
    Default
	{
        Health 5;
		DropItem "BMTZilly";
        Radius 32;
        Height 56;
        Mass 50;
        Speed 30;
        Damage 1;
        PainChance 256;
        Monster;
		-CountKill;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD;
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 0.25;
		BounceCount 5;
		
        AttackSound "";
		SeeSound "imp/sight";
		ActiveSound "imp/active";
        PainSound "BMNSQKSF";
        DeathSound "BMNPOPBL";
        RenderStyle "SoulTrans";
        Obituary "%o ate too much Bork Pacon.";
    }
    
    states
    {
        Spawn:
            BMIM A 10 BRIGHT A_Look;
            Loop;
        See:
            BMIM A 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMIM A 8 BRIGHT A_FaceTarget;
            BMIM A 6 BRIGHT A_TroopAttack;
            Goto See;
        Pain:
            BMIM A 3 BRIGHT;
            BMIM A 3 BRIGHT A_Pain;
            Goto See;
        Death:
            BMIM A 2;
            BMIM E 2 A_Scream;
			BMIM C 4 A_Blast(0, 64, 128.0, 50.0, "BlastEffect", "BlastRadius");
            BMIM D -1;
            //BMIM A 6 BRIGHT A_Explode(1, 22222, XF_NOSPLASH);
			Stop;
	}
}

class BMNullShellRank3 : Actor
{
	action void A_NullDeathRank3()
    {	
		actor act = null;
		int x = pos.x;
		int y = pos.y;
		int z = pos.z;
		ACS_NamedExecute("increase_subboss_kill_count");
		act = Spawn("BMNullShellRank2", (x + 20, y, z));
		act.ChangeTid(105);
		act = Spawn("BMNullShellRank2", (x - 20, y, z));
		act.ChangeTid(105);
		act = Spawn("BMNullShellRank2", (x, y + 20, z));
		act.ChangeTid(105);
		act = Spawn("BMNullShellRank2", (x, y - 20, z));
		act.ChangeTid(105);
    }
	
	action void A_FireNullShellDeathProjectile()
    {	
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, 0);
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, 45);
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, 135);
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, 180);
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, -45);
		A_SpawnProjectile("BMBakedBadBigBalls", 0, 0, -135);
		A_PlaySound("BMNDANK", CHAN_WEAPON);
    }

    Default
	{
		//DropItem "BMNullShellRank2";
		//DropItem "BMNullShellRank2";
		//DropItem "BMNullShellRank2";
		DropItem "BMCheckpoint";
        Health 1500;
		Gravity 1.3;
        Radius 256;
        Height 256;
        Mass 25;
        Speed 30;
        Damage 20;
        PainChance 256;
		ProjectileKickBack 50;
		BounceFactor 1.0;
        Monster;
		-CountKill;
        +FLOAT;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD
		+SPAWNFLOAT
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 1;
		
        AttackSound "skull/melee";
        PainSound "BMNSQKSF";
        DeathSound "world/barrelx";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was nullified by a Null Shell (Risk Rank 3).";
    }
    
    states
    {
        Spawn:
			//BMBM A 1 BRIGHT Thing_ChangeTID(0, 101);
            BMBM AABBCC 10 BRIGHT A_Look;
            Loop;
        See:
            BMBM AABBCC 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMBM AABBCC 10 BRIGHT A_FaceTarget;
            BMBM AABBCC 4 BRIGHT A_SkullAttack;
            BMBM AABBCC 4 BRIGHT;
            Goto Missile+2;
        Pain:
            BMBM A 3 BRIGHT;
            BMBM A 3 BRIGHT A_Pain;
            Goto See;
        Death:
			BMBM C 1 ACS_NamedExecute("block_spawner_boss_all_clear");
            BMBM C 1 A_Scream;
			BMBM B 1 A_NoBlocking();
			BMBM A 15 A_FireNullShellDeathProjectile;
			BMBM B 2 A_NullDeathRank3;
			BMBM B 0 ACS_NamedExecute("unblock_spawner_boss_all_clear");
			//BMBM B 8 A_Explode(64, 512);
			
			//BMBM B 1 A_Explode(256, 512);
			//BMBM A 1 BRIGHT Thing_Spawn(13456, 0, 104);
			//BMBM A 1 BRIGHT Thing_Spawn(13456, 0, 104);
			//BMBM A 1 BRIGHT Thing_Spawn(13456, 0, 104);
			BMBM B 2 A_Blast(0, 128, 128.0, 20.0, "BlastEffect", "BlastRadius");
			//BMBM A 1 BRIGHT A_PainDie("BMNullShellRank1");
			TNT1 A -1;
			Stop;
	}
}

class BMNullShellRank2 : BMNullShellRank3
{
	action void A_NullDeathRank2()
    {
		actor act = null;
		int x = pos.x;
		int y = pos.y;
		int z = pos.z;
		
		ACS_NamedExecute("increase_subboss_kill_count");
		
		act = Spawn("BMNullShellRank1", (x + 20, y, z));
		act.ChangeTid(106);
		act = Spawn("BMNullShellRank1", (x - 20, y, z));
		act.ChangeTid(106);
		act = Spawn("BMNullShellRank1", (x, y + 20, z));
		act.ChangeTid(106);
		act = Spawn("BMNullShellRank1", (x, y - 20, z));
		act.ChangeTid(106);
    }
    Default
	{
		DropItem "BMCheckpoint", -1;
        Health 777;
        Radius 128;
        Height 128;
        Mass 50;
        Speed 45;
		Damage 10;
        PainChance 256;
		ProjectileKickBack 50;
		BounceFactor 1.0;
        Monster;
        +FLOAT;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD
		+SPAWNFLOAT
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 1;
		
        AttackSound "skull/melee";
        PainSound "BMNSQKSF";
        DeathSound "world/barrelx";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was nullified by a Null Shell (Risk Rank 2).";
    }
    
    states
    {
        Spawn:
			//BMBM D 1 BRIGHT Thing_ChangeTID(0, 101);
            BMBM DDEEFF 10 BRIGHT A_Look;
            Loop;
        See:
            BMBM DDEEFF 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMBM DDEEFF 10 BRIGHT A_FaceTarget;
            BMBM DDEEFF 4 BRIGHT A_SkullAttack;
            BMBM DDEEFF 4 BRIGHT;
            Goto Missile+2;
        Pain:
            BMBM D 3 BRIGHT;
            BMBM D 3 BRIGHT A_Pain;
            Goto See;
        Death:
			BMBM F 0 ACS_NamedExecute("block_spawner_boss_all_clear");
            BMBM F 1 A_Scream;
			BMBM E 1 A_NoBlocking();
			BMBM A 15 A_FireNullShellDeathProjectile;
			BMBM E 8 A_Explode(64, 512);
			BMBM F 2 A_NullDeathRank2;
			//BMBM E 1 A_Explode(256, 512);
			BMBM E 1 A_Blast(0, 128, 128.0, 10.0, "BlastEffect", "BlastRadius");
			//BMBM D 1 BRIGHT A_PainDie("BMNullShellRank1");
			//BMBM D 1 BRIGHT Thing_Spawn(13457, 0, 104);
			//BMBM D 1 BRIGHT Thing_Spawn(13457, 0, 104);
			//BMBM D 1 BRIGHT Thing_Spawn(13457, 0, 104);
			BMBM E 1 A_NoBlocking();
			BMBM F 0 ACS_NamedExecute("unblock_spawner_boss_all_clear");
			TNT1 A -1;
			Stop;
	}
}

class BMNullShellRank1 : BMNullShellRank3
{
    Default
	{
		DropItem "BMCheckpoint", -1;
        Health 333;
        Radius 128;
        Height 128;
        Mass 50;
        Speed 45;
		Damage 10;
        PainChance 256;
		ProjectileKickBack 50;
		BounceFactor 1.0;
        Monster;
        +FLOAT;
        +MISSILEMORE;
        +NOICEDEATH;
		+NOBLOOD
		+SPAWNFLOAT
		+FORCEXYBILLBOARD;
		
		BounceType "Doom";
		WallBounceFactor 1;
		
        AttackSound "BMNDANK";
        PainSound "BMNSQKSF";
        DeathSound "world/barrelx";
        ActiveSound "BMNSQKSF";
        RenderStyle "SoulTrans";
        Obituary "%o was nullified by a Null Shell (Risk Rank 2).";
    }
    
    states
    {
        Spawn:
			//BMBM G 1 BRIGHT Thing_ChangeTID(0, 101);
            BMBM GGHHII 10 BRIGHT A_Look;
            Loop;
        See:
            BMBM GGHHII 6 BRIGHT A_Chase;
            Loop;
        Missile:
            BMBM GGHHII 10 BRIGHT A_FaceTarget;
            BMBM GGHHII 4 BRIGHT A_SkullAttack;
            BMBM GGHHII 4 BRIGHT;
            Goto Missile+2;
        Pain:
            BMBM G 3 BRIGHT;
            BMBM G 3 BRIGHT A_Pain;
            Goto See;
        Death:
            BMBM I 1 A_Scream;
			BMBM I 0 ACS_NamedExecute("increase_subboss_kill_count");
			BMBM H 1 A_Explode(32, 64);
			BMBM G 1 A_NoBlocking();
			TNT1 A -1;
			//BMBM D 1 ACS_NamedExecute("check_spawner_boss_all_clear");
			Stop;
	}
}

class BMBakedBadBigTheCake : Cyberdemon
{
	action void A_FireBakedBadBigBalls()
    {	
		A_SpawnProjectile("BMBakedBadBigBallsBigger", 32, 0);
    }
	

	Default
	{
		Health 3500;
		Radius 160;
		Height 160;
		Mass 1000;
		Speed 30;
		PainChance 30;
		Monster;
		MinMissileChance 160;
		+BOSS 
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		//SeeSound "cyber/sight";
		//PainSound "cyber/pain";
		//DeathSound "cyber/death";
		//ActiveSound "cyber/active";
		SeeSound "BMNDANK";
		PainSound "BMNSPLAT";
		DeathSound "BMNPOPBO";
		ActiveSound "BMNDANK";
		Obituary "%o was blown to bits by Big the Cake.";
		Tag "Baked Bad: Big the Cake";
	}
	States
	{
	Spawn:
		BMCK A 10 A_Look;
		Loop;
	See:
		BMCK A 3 A_Hoof;
		BMCK A 3 A_Chase;
		BMCK A 3 A_Metal;
		BMCK A 3 A_Chase;
		Loop;
	Missile:
	
		BMCK A 2 A_FaceTarget;
		BMCK A 15 A_FireBakedBadBigBalls;
		BMCK A 15 A_FaceTarget;
		BMCK A 15 A_FireBakedBadBigBalls;
		BMCK A 15 A_FaceTarget;
		BMCK A 15 A_FireBakedBadBigBalls;
		
		BMCK A 18 A_FaceTarget;
		BMCK A 4 A_FireBakedBadBigBalls;
		BMCK A 4 A_FaceTarget;
		BMCK A 4 A_FireBakedBadBigBalls;
		BMCK A 4 A_FaceTarget;
		BMCK A 4 A_FireBakedBadBigBalls;
		
		BMCK A 24 A_FaceTarget;
		BMCK A 15 A_FireBakedBadBigBalls;
	
		/*
		BMCK A 2 A_FaceTarget;
		BMCK A 15 A_CyberAttack;
		BMCK A 15 A_FaceTarget;
		BMCK A 15 A_CyberAttack;
		BMCK A 15 A_FaceTarget;
		BMCK A 15 A_CyberAttack;
		
		BMCK A 18 A_FaceTarget;
		BMCK A 4 A_CyberAttack;
		BMCK A 4 A_FaceTarget;
		BMCK A 4 A_CyberAttack;
		BMCK A 4 A_FaceTarget;
		BMCK A 4 A_CyberAttack;
		
		BMCK A 24 A_FaceTarget;
		BMCK A 15 A_CyberAttack;
		*/
		Goto See;
	Pain:
		BMCK A 10 A_Pain;
		Goto See;
	Death:
		BMCK A 10;
		BMCK B 10 A_Scream;
		BMCK B 10;
		BMCK C 10 A_NoBlocking;
		BMCK C 10;
		BMCK C 30;
		BMCK D -1 A_BossDeath;
		Stop;
	}
}

class BMBakedBadBigBalls : Rocket
{
 	Default
	{
		Scale 1;
		Radius 11;
        Height 8;
        Speed 20;
        Damage 10;
        Projectile;
		+RANDOMIZE;
		RenderStyle "Normal";
		Alpha 1;
		SeeSound "BMNDANK";
		DeathSound "BMNPOPBO";
		Tag "Baked Bad's Big Balls";
	}
	States 
	{
	Spawn: 
		BMBM L 25;
		Goto Death;
	Death: 
		BMBM K 15 Bright A_Explode;
		Stop;
	}
}

class BMBakedBadBigBallsBigger : BMBakedBadBigBalls
{
 	Default
	{
		Scale 2.5;
		Radius 22;
        Height 16;
	}
	States 
	{
	Spawn: 
		BMBM L 140;
		Goto Death;
	Death: 
		BMBM K 15 Bright A_Explode;
		Stop;
	}
}

class BMAllcomers : Actor
{
    Default
	{
        Health 696969;
        Radius 16;
		Height 56;
		Mass 100;
        Speed 20;
        Damage 0;
        PainChance 0;
		Tag "Allco Mers";
		
		Monster;
		-CountKill;
		+ONLYVISIBLEINMIRRORS;
        +NOICEDEATH;
		+NOBLOOD;
		+FLOORCLIP;
		+FRIENDLY;
		-SHOOTABLE;
		-SOLID;
		-FALLDAMAGE;
		+NOBLOCKMONST;
		+NOTELESTOMP;
		+PUSHABLE;
		+FORCEXYBILLBOARD;
		
		+NOBLOCKMAP;
		
		//RenderStyle "Add";
		
        AttackSound "";
        PainSound "BMNSQKSF";
        DeathSound "BMNPOPSF";
        ActiveSound "BMNSQKSF";
        Obituary "%o somehow died to %g meta representation.";
    }
    
    States
    {
		Spawn:
            BMRB B -1 A_Look;
            Stop;
	}
	
	override void Tick()
    {		
		// Get the player's position
		ACS_NamedExecute("TeleportBunnyToPlayer");

        super.Tick();
    }
}

class BMGasket : Actor
{
	Default
	{
		DropItem "BMBSting";
		Health 500;
		PainChance 200;
		Radius 16;
		Height 56;
		Mass 100;
		Speed 20;
		Damage 0;
		PainChance 0;
		Activation THINGSPEC_Default;
		Monster;
		-CountKill;
		+NEVERTARGET;
		-COUNTKILL;
		+NOSPLASHALERT;
		+FLOORCLIP;
		+JUSTHIT;
		+FRIENDLY;
		+FORCEXYBILLBOARD;
		+USESPECIAL;
		-BUMPSPECIAL;
		MinMissileChance 150;
		MaxStepHeight 16;
		MaxDropoffHeight 32;
		SeeSound "peasant/sight";
		AttackSound "peasant/attack";
		PainSound "";
		DeathSound "";
		HitObituary "%o stepped in front of Gasket's shotgun.";
	}
  
  States
  {
	Spawn:
		BMSK A 70 A_LookEX;
		Loop;
	See:
		BMSK A 5 A_FaceTarget;
		Loop;
  }
  
  override bool Used(Actor user)
    {
        // Add your code here to define what happens when the actor is used.
		//A_Log("attempting to start conversation.");
		//StartConversation(50, 1);
		//A_Log("Conversation should have started?");
		//A_Log("I'm looking for my brother. If you can fight, I'll go with.");
		A_Log("I'm looking for my brother. If you see him, let me know.");
		StartConversation(user, 1); // If this ever actually works, I'll be stunned.
        return true; // Return true if the actor was used.
    }
}

class BMPatcher : Fist
{
 	Default
	{
		Weapon.SlotNumber 1;
		Weapon.SelectionOrder 3600;
		Weapon.Kickback 100;
		Obituary "Yes, it is a sharp needle.";
		Tag "Patcher";
		+WEAPON.WIMPY_WEAPON;
		+WEAPON.MELEEWEAPON;
	}
	States
	{
	Ready:
		BMNE A 1 A_WeaponReady;
		Loop;
	Deselect:
		BMNE A 1 A_Lower;
		Loop;
	Select:
		BMNE A 1 A_Raise;
		Loop;
	Fire:
		BMNE A 4;
		BMNE B 6 A_Punch;
		//BMNE B 6 A_FirePistol;
		BMNE C 4;
		BMNE B 5 A_ReFire;
		Goto Ready;
	Flash:
		BMNE A 7 Bright A_Light1;
		Goto LightDone;
		BMNE A 7 Bright A_Light1;
		Goto LightDone;
 	Spawn:
		BMNE A -1;
		Stop;
	}
}

class BMDigouter : Chainsaw
{
 	Default
	{
		Weapon.SlotNumber 1;
		Weapon.SelectionOrder 2100;
		Weapon.Kickback 100;
		Weapon.UpSound "BMCMPRON";
		Weapon.ReadySound "BMCMPRSR";
		Obituary "%o was overpressurized!";
		Tag "Digouter";
		Inventory.PickupMessage "Digouter";
		+WEAPON.MELEEWEAPON;
	}
	States
	{	
	Ready:
		BMDO C 4 A_WeaponReady;
		Loop;
	Deselect:
		BMDO C 1 A_Lower;
		Loop;
	Select:
		BMDO C 1 A_Raise;
		Loop;
	Fire:
		BMDO CDE 4 A_Saw("BMCMPRSR", "BMCMPRON");
		BMDO C 0 A_ReFire;
		Goto Ready;
	Spawn:
		BMDO A -1;
		Stop;
	}
}

class BMStingFrazzle : Ammo
{
	Default
	{
		Scale 0.25;
		Inventory.PickupMessage "B.Sting Frazzles";
		Inventory.Amount 10;
		Inventory.MaxAmount 340;
		Inventory.Icon "BMWPC0";
		Ammo.BackpackAmount 10;
		Ammo.BackpackMaxAmount 400;
	}
	
	states
	{
		Spawn:
			BMWP C -1;
			stop;
	}
}

class BMStingShreds : BMStingFrazzle
{
	Default
	{
		Scale 0.25;
		Inventory.PickupMessage "B.Sting Shreds";
		Inventory.Amount 100;
	}
}

class BMTZilly : Ammo
{
	Default
	{
		Scale 0.25;
		Inventory.PickupMessage "Tzilly";
		Inventory.Amount 34;
		Inventory.MaxAmount 134;
		Inventory.Icon "BMWPH0";
		Ammo.BackpackAmount 50;
		Ammo.BackpackMaxAmount 400;
	}
	
	states
	{
		Spawn:
			BMWP H -1;
			stop;
	}
}

class BMWindBullet : Ammo
{
	Default
	{
		Scale 0.25;
		Inventory.PickupMessage "Cyclone Slug";
		Inventory.Amount 3;
		Inventory.MaxAmount 69;
		Inventory.Icon "BMWPJ0";
		Ammo.BackpackAmount 3;
		Ammo.BackpackMaxAmount 6969;
	}
	
	states
	{
		Spawn:
			BMWP J -1;
			stop;
	}
}

class BMBSting : DoomWeapon
{
	action void A_FireBSting()
    {		
		 A_FireBullets (0, 0, 1, 20, "BulletPuff");
		 A_PlaySound("BMNHOOKS", CHAN_WEAPON);
		 A_GunFlash();
    }
	
	action void A_FireBStingProjectile()
    {	
		A_FireProjectile("BMBStingPlayerShot", 0, 1);
		A_PlaySound("BMNPOPSF", CHAN_WEAPON);
		A_GunFlash();
    }

 	Default
	{
		Weapon.SlotNumber 2;
		Weapon.SelectionOrder 1900;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 100;
		Weapon.AmmoType "BMStingFrazzle";
		Obituary "%o was filled with B.Stings";
		+WEAPON.WIMPY_WEAPON;
		Inventory.Pickupmessage "Beastling Stings";
		Tag "B.Sting";
		
		//Weapon.WeaponScaleX 0.3;
		//Weapon.WeaponScaleY 0.3;
	}
	States
	{
	Ready:
		BMWP D 1 A_WeaponReady;
		Loop;
	Deselect:
		BMWP D 1 A_Lower;
		Loop;
	Select:
		BMWP E 2 A_Raise;
		Loop;
	Fire:
		BMWP D 3 Bright;
		BMWP D 6 Bright A_FireBStingProjectile;
		BMWP D 15;
		BMWP D 5 A_ReFire;
		Goto Ready;
	Flash:
		BMWP D 7 Bright A_Light1;
		Goto LightDone;
		BMWP D 7 Bright A_Light1;
		Goto LightDone;
 	Spawn:
		BMWP B -1;
		Stop;
	}
}

class BMBStingPlayerShot : BMBSting
{
 	Default
	{
		Scale 0.75;
		
		Radius 16;
        Height 16;
        Speed 160;
        Damage 10;
        Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 1;
		SeeSound "BMNDANK";
		DeathSound "";
		Tag "Stinger Player Projectile";
		+RIPPER;
	}
	States 
	{
	Spawn: 
		BMST C 12;
		Goto Death;
	Death: 
		TNT1 A 0;
		Stop;
	}
}

class BMSerpentine : BMBSting
{
	action void A_FireSerpentine()
	{		
		 A_FireBullets (2.25, 0, 3, 5, "BulletPuff");
		 A_PlaySound("BMNHOOKS", CHAN_WEAPON);
		 A_GunFlash();
	}
	Default
	{
		Weapon.SlotNumber 4;
		Weapon.SelectionOrder 1700;
		Weapon.AmmoUse 3;
		Obituary "%o took too many Slither Smooches.";
		Inventory.Pickupmessage "Serpentine";
		Tag "Serpentine";
	}
	States
	{
	Spawn:
		BMCH B -1;
		Stop;
	
	Ready:
		BMWP F 1 A_WeaponReady;
		Loop;
	Deselect:
		BMWP F 1 A_Lower;
		Loop;
	Select:
		BMWP F 2 A_Raise;
		Loop;
	Fire:
		BMWP F 4 Bright A_FireSerpentine;
		BMWP F 0 A_ReFire;
		Goto Ready;
	Flash:
		BMWP F 7 Bright A_Light1;
		Goto LightDone;
		BMWP F 7 Bright A_Light1;
		Goto LightDone;
	}
}

class BMFallstreak : BMBSting
{
	action void A_FireFallstreak()
	{		
		 A_FireBullets(12, 0, 12, 20, "BulletPuff");
		 A_PlaySound("BMNPOPSF", CHAN_WEAPON);
		 A_GunFlash();
	}
 	Default
	{
		Weapon.SlotNumber 3;
		Weapon.SelectionOrder 1800;
		Weapon.AmmoUse 12;
		Weapon.AmmoType "BMTZilly";
		Obituary "%o was holepunched by the Fallstreak.";
		Inventory.Pickupmessage "Fallstreak";
		Tag "Fallstreak";
	}
	States 
	{
	Spawn: 
		BMWP G -1;
		Stop;
		
	Ready:
		BMWP D 1 A_WeaponReady;
		Loop;
	Deselect:
		BMWP D 1 A_Lower;
		Loop;
	Select:
		BMWP D 2 A_Raise;
		Loop;
	Fire:
		BMWP D 5 Bright A_FireFallstreak;
		BMWP D 5 Bright;
		BMWP E 35 Bright;
		BMWP D 0 A_ReFire;
		Goto Ready;
	Flash:
		BMWP D 7 Bright A_Light1;
		Goto LightDone;
		BMWP D 7 Bright A_Light1;
		Goto LightDone;
	}
}

class BMSuperShieldBurst : BMBSting
{
	action void A_FireSuperShieldBurst()
    {	
		A_FireBullets (0, 0, 1, 20, "BulletPuff");
		A_FireProjectile("BMSuperShieldBurstBurst", 0, 1);
		A_GunFlash();//BMWPI0
    }

 	Default
	{
		Weapon.SlotNumber 5;
		Weapon.SelectionOrder 1600;
		Weapon.AmmoType "BMWindBullet";
		Obituary "%o was blown to bits by the Blowback Generator.";
		Inventory.Pickupmessage "Blowback Generator";
		Tag "Blowback Generator";
	}
	States 
	{
	Spawn: 
		BMWP I -1;
		Stop;
		
	Ready:
		BMWP K 1 A_WeaponReady;
		Loop;
	Deselect:
		BMWP K 1 A_Lower;
		Loop;
	Select:
		BMWP K 2 A_Raise;
		Loop;
	Fire:
		BMWP K 5 Bright A_FireSuperShieldBurst;
		BMWP K 10 Bright;
		BMWP K 0 A_ReFire;
		Goto Ready;
	Flash:
		BMWP K 7 Bright A_Light1;
		Goto LightDone;
		BMWP K 7 Bright A_Light1;
		Goto LightDone;
	}
}

class BMSuperShieldBurstBurst : BMBSting
{
 	Default
	{
		Scale 3.0;
		Radius 18;
        Height 18;
        Speed 60;
        Damage 3;
        Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 1;
		SeeSound "";
		DeathSound "BMNPOPSF";
		Obituary "%o was blown to bits by the Blowback Generator.";
		Tag "Blowback Generator Gumshot";
	}
	States 
	{
	Spawn: 
		BMBM J 6;
		Goto Death;
	Death: 
		BMBM K 2 A_Blast(0, 1024, 1024, 60.0, "BlastEffect", "BlastRadius");
		TNT1 A 0;
		Stop;
	}
}

Class BMBlueYum : Soulsphere
{
	Default
	{
		Tag "Blue Yum";
	}
	States
	{
		Spawn:
		BMBY A 2 Bright;
		Loop;
	}
}

Class BMRisqueKit : Berserk
{
	Default
	{
		Radius 32;
		Height 32;
		Tag "Risque Kit";
		Inventory.PickupMessage "Toroko Flower Mix..."; // "Berserk!"
		// Consider only using the timer mechanic if this is active? 
		// In which, flowers can refill the timer instead of checkpoints.
		Inventory.PickupSound "misc/p_pkup";
	}
	
	States
	{
	Spawn:
		BMZK A -1;
		Stop;
	Pickup:
		TNT1 A 0 A_GiveInventory("PowerStrength");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("BMPatcher");
		Stop;
	}
}

class BMTimerDamageSource : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		Health 10;
		Obituary "%o was never seen again. Only a plushie of %g likeness was found.";
	}
	
    states
    {
        Spawn:
            TNT1 A -1 bright;
            stop;
    }
	
	override void Tick()
    {		
		// We are not trying to disable access to the crouch button, but we 
		// are canceling out the usual crouch behavior.
		
		// This is also clearly not the logical place to put player logic,
		// but there's only 13 hours left. I'm not gonna make a new class.
		int verySlightlyCrouchedHeight = 55.0;
		
		if (playeringame[0])
		{
			if (players[0].Mo.Height < verySlightlyCrouchedHeight) 
			{
				//A_LogFloat((players[0].Mo.Height));
				players[0].Uncrouch();
				ACS_NamedExecute("btn_crouch_toggle_down_on");
			}
			else 
			{
				ACS_NamedExecute("btn_crouch_toggle_down_off");
			}
		}

        super.Tick();
    }
	
	
}

class BMCheckSpawnerBossAllClear : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		-Shootable;
		Obituary "%o was never seen again. Only a plushie of %g likeness was found.";
	}
	
    states
    {
        Spawn:
            TNT1 A 35 ACS_NamedExecute("check_spawner_boss_all_clear");
            Loop;
    }
}

class BMMenaceEnergySource : Cacodemon
{
	Default
	{
		Health 5;
		Tag "Bubble Menace Energy Source";
	}
	
    states
    {
        Spawn:
			HEAD A 2 A_Look;
			Loop;
		See:
			HEAD A 2 A_FaceTarget;
			Loop;
		Death:
			HEAD A 2 Exit_Normal(0);
			Stop;
    }
}

class BMRedDisc : RedCard
{
	Default
	{
		Inventory.PickupMessage "Got a Red Key Disc";
		Inventory.Icon "BMWPO0";
		Tag "Red Key Disc";
	}
	
    states
    {
        Spawn:
			BMWP L 10;
			BMWP L 10 Bright;
			Loop;
    }
}

class BMYellowDisc : YellowCard
{
	Default
	{
		Inventory.PickupMessage "Got a Yellow Key Disc";
		Inventory.Icon "BMWPP0";
		Tag "Yellow Key Disc";
	}
	
    states
    {
        Spawn:
			BMWP M 10;
			BMWP M 10 Bright;
			Loop;
    }
}

/*
JediMB (she/they) — 06/02/2023 4:55 PM
Okay, so the way it works is that every MAP inside of a WAD is split up into multiple lumps. What kinds of lumps depends on the format, but for UDMF it's:

MAPnn is just an empty lump. It's a "START"-type marker
TEXTMAP contains the actual UDMF map data
BEHAVIOR is compiled ACS
ZNODES is node tree stuff that I don't even understand
SCRIPTS is your ACS (or equivalent) readable code
ENDMAP is another empty lump, telling you there are no more lumps associated with that map

You had gotten all of your other data lumps stuck in-between the start and end lumps for your map, so chaos ensued, as RAMPART couldn't identify what was your map data and what was all your other data.
*/

/*
"Annie? I haven't seen anyone named Annie."
"I'm looking for my lil brother. If you're heading to the woods, I'll join you."
"I don't think those things are alive. They don't breathe, they don't eat, and they don't feel pain."

Patcher (Punch)
Digouter -> Zilly ( Chainsaw)
BSting -> Stinger (Projectile Pistol)
Fallstreak -> Cyclone Slug / Wind Bullet (Hitscan Pistol)
Serpentine -> Stinger (Hitscan SMG)
Blowback Generator -> Wind Bullet (Hitscan Rockets!?)
Blue Yum (Soul Sphere)


*/